---
- name: Include distribution specific variables
  include_vars: "{{ distro }}.yml"

- name: Include distribution specific tasks
  include_tasks: "{{ distro }}.yml"

- name: Start and enable PostgreSQL
  ansible.builtin.systemd:
    enabled: true
    name: postgresql
    state: started
  tags:
    - configuration

- name: Ensure PostgreSQL listens on external interfaces
  ansible.builtin.lineinfile:
    path: "{{ postgresql_conf }}"
    regexp: ^#listen_addresses
    line: listen_addresses = '{{ listen_addresses }}'
  notify: Restart PostgreSQL
  tags: ["configuration"]

- name: Configure pg_hba for remote connections
  ansible.builtin.blockinfile:
    path: "{{ pg_hba_conf }}"
    insertafter: EOF
    block: |
      # IPv4 remote connections:
      {{ client_connection }}    {{ client_database }}             {{ client_user }}             {{ client_address }}               md5
  notify: Restart PostgreSQL
  tags: ["configuration"]

- name: Generate admin password
  # MD5 password has to be salted with username
  ansible.builtin.shell: "echo md5$(echo -n '{{ admin_password }}{{ admin_user }}' | md5sum | awk '{print $1}')"
  register: admin_password_hash
  changed_when: false
- debug: msg="{{ admin_user }} password hash is {{ admin_password_hash.stdout }}"
  tags: ["configuration"]

- name: Create superuser, set MD5-hashed password, grant privs
  become: true
  become_user: postgres
  community.postgresql.postgresql_user:
    name: "{{ admin_user }}"
    password: "{{ admin_password_hash.stdout }}"
    role_attr_flags: SUPERUSER
    state: present
  tags: ["configuration"]
